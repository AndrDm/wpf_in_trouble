MSBuild-Version 17.9.8+b34f75857 fÅr .NET Framework
Syntax:              MSBuild.exe [Optionen] [Projektdatei | Verzeichnis]

Beschreibung:         Erstellt die angegebenen Ziele in der Projektdatei. Wenn
                     keine Projektdatei angegeben ist, wird das aktuelle Arbeitsverzeichnis
                     von MSBuild nach einer Datei durchsucht, die eine Dateierweiterung
                     besitzt, die auf "proj" endet. Diese Datei wird dann verwendet. Wenn
                     ein Verzeichnis angegeben ist, sucht MSBuild in diesem Verzeichnis
                     nach einer Projektdatei.

Optionen:            Beachten Sie, dass Sie Optionen Åber
                     "-option", "/option" und "--option" angeben kînnen.

  -target:<Ziele>  Erstellt diese Ziele in diesem Projekt. Mehrere Ziele werden durch ein Semikolon
                     oder Komma voneinander getrennt. Alternativ kann jedes Ziel gesondert
                     angegeben werden. (Kurzform: -t)
                     Beispiel:
                       -target:Resources;Compile

  -property:<n>=<v>  Legt diese Eigenschaften auf Projektebene fest oder Åberschreibt sie. <n> ist
                     der Eigenschaftenname, und <v> ist der Eigenschaftswert. Mehrere
                     Eigenschaften werden durch ein Semikolon oder Komma getrennt.
                     Alternativ kann jede Eigenschaft gesondert angegeben werden. (Kurzform: -p)
                     Beispiel:
                       -property:WarningLevel=2;OutDir=bin\Debug\

  -maxCpuCount:[n]   Gibt die maximale Anzahl gleichzeitiger Prozesse an,
                     mit denen die Erstellung ausgefÅhrt werden soll. Ohne den
                     Schalter wird der Standardwert 1 verwendet. Wenn der Schalter ohne einen Wert angegeben wird,
                     verwendet MSBuild
                     alle Prozessoren des Computers. (Kurzform: -m[:n])
      
  -toolsversion:<Version>
                     Die Version des MSBuild-Toolsets (Aufgaben, Ziele usw.),
                     die wÑhrend des Erstellens zu verwenden ist. Diese Version Åberschreibt die 
                     von einzelnen Projekten angegebenen Versionen. (Kurzform: 
                     -tv)
                     Beispiel:
                       -toolsversion:3.5
   
  -verbosity:<level> Zeigt diese Menge von Informationen im Ereignisprotokoll an.
                     Folgende AusfÅhrlichkeitsstufen sind verfÅgbar: q[uiet], m[inimal],
                     n[ormal], d[etailed] und diag[nostic]. (Kurzform: -v)
                     Beispiel:
                       -verbosity:quiet

Hinweis: AusfÅhrlichkeit der Dateiprotokollierungen
                           wird separat festgelegt durch
                           -fileloggerparameters.

  -consoleloggerparameters:<Parameter>
                     Parameter fÅr die Konsolenprotokollierung. (Kurzform: -clp)
                     Folgende Parameter sind verfÅgbar:
                        PerformanceSummary: Zeigt die in Aufgaben, Zielen und
                            Projekten verbrachte Zeit an.
                        Summary: Zeigt abschlie·end eine Zusammenfassung der Fehler und Warnungen an.
                        NoSummary: Zeigt keine Fehler- und WarnungsÅbersicht am
                            Ende an.
                        ErrorsOnly: Zeigt nur Fehler an.
                        WarningsOnly: Zeigt nur Warnungen an.
                        NoItemAndPropertyList: Zeigt keine Liste der Elemente
                            und Eigenschaften am Anfang jeder Projekterstellung an.
                        ShowCommandLine: Zeigt TaskCommandLineEvent-Meldungen an. 
                        ShowTimestamp: Zeigt den Timestamp als PrÑfix einer
                            Meldung an.
                        ShowEventId: Zeigt die eventId fÅr gestartete
                            Ereignisse, abgeschlossene Ereignisse und Meldungen an.
                        ForceNoAlign: Richtet den Text nicht an der Grî·e des
                            Konsolenpuffers aus.
                        DisableConsoleColor: Verwendet die Standardkonsolenfarben
                            fÅr alle Protokollierungsmeldungen.
                        DisableMPLogging: Deaktiviert die Ausgabe wie
                            bei der Mehrprozessorprotokollierung im Modus mit nur einem Prozessor.
                        EnableMPLogging: Aktiviert das Format der
                            Mehrprozessorprotokollierung auch bei der AusfÅhrung
                            im Modus mit nur einem Prozessor.
Dieses Protokollierungsformat ist standardmÑ·ig aktiviert.
                         ForceConsoleColor: Verwendet selbst dann
                            ANSI-Konsolenfarben, wenn die Konsole dies nicht unterstÅtzt.
                        PreferConsoleColor: Verwendet ANSI-Konsolenfarben nur,
                            wenn die Zielkonsole dies unterstÅtzt.
                     Verbosity: öberschreibt die Einstellung fÅr -verbosity fÅr
                            diese Protokollierung.
                     Beispiel:
                        -consoleLoggerParameters:PerformanceSummary;NoSummary;
                                                 Verbosity=minimal

  -noConsoleLogger   Deaktiviert die Standardkonsolenprotokollierung
                     und protokolliert keine Ereignisse auf der Konsole. (Kurzform: -noConLog)

  -fileLogger[n]     Protokolliert die Erstellungsausgabe in eine Datei. StandardmÑ·ig
                     befindet sich diese im aktuellen Verzeichnis,
                     der Dateiname lautet "msbuild[n].log". Ereignisse aller Knoten
                     werden in einem einzigen Protokoll zusammengefasst. Der Speicherort der Datei und andere Parameter fÅr fileLogger
                     kînnen durch das HinzufÅgen des Schalters
                     "-fileLoggerParameters[n]" angegeben werden.
                     "n" (optional) kann eine Zahl von 1-9 sein, sodass bis zu
                     10 Dateiprotokollierungen angefÅgt werden kînnen. (Kurzform: -fl[n])
    
  -fileLoggerParameters[n]:<Parameter>
                     Gibt zusÑtzliche Parameter fÅr Dateiprotokollierungen an.
                     Dieser Schalter bedeutet, dass der entsprechende 
                     Schalter "-fileLogger[n]" ebenfalls vorhanden ist.
                     "n" (optional) kann eine Zahl von 1-9 sein.
                     "-fileLoggerParameters" wird auch von verteilten 
                     Dateiprotokollierungen verwendet (siehe Beschreibung zu "-distributedFileLogger").
                     (Kurzform: -flp[n])
                     Es sind dieselben Parameter wie fÅr die Konsolenprotokollierung
                     verfÅgbar. Einige zusÑtzliche Parameter:
                        LogFile: Pfad der Protokolldatei, in die das 
                            Buildprotokoll geschrieben wird.
                        Append: Gibt an, ob das Buildprotokoll erweitert oder 
                            oder Åberschrieben wird. Mit diesem Schalter
                            wird das Buildprotokoll an die Protokolldatei angefÅgt;
                            Ohne diesen Schalter wird der Inhalt 
                            der vorhandenen Protokolldatei Åberschrieben. 
                            StandardmÑ·ig wird die Protokolldatei nicht erweitert.
                        Encoding: Gibt die Codierung der Datei an, 
                            z. B. UTF-8, Unicode oder ASCII.
                     Die Standardeinstellung fÅr "verbosity" ist "Detailed".
                     Beispiele:
                       -fileLoggerParameters:LogFile=MyLog.log;Append;
                                           Verbosity=diagnostic;Encoding=UTF-8

                       -flp:Summary;Verbosity=minimal;LogFile=msbuild.sum 
                       -flp1:warningsonly;logfile=msbuild.wrn 
                       -flp2:errorsonly;logfile=msbuild.err
    
  -distributedlogger:<Zentrale Protokollierung>*<Weiterleitende Protokollierung>
                     Mithilfe dieser Protokollierung werden Ereignisse von MSBuild protokolliert, wobei an jeden Knoten eine andere 
                     Protokollierungsinstanz angefÅgt wird. Um mehrere Protokollierungen anzugeben, wird jede Protokollierung 
                     gesondert angegeben.
                     (Kurzform -dl)
                     Die Syntax fÅr die <Protokollierung> lautet:
                       [<Klasse>,]<assembly>[,<Optionen>][;<Parameter>]
                     Die Syntax fÅr die <Protokollierungsklasse> lautet:
                        [<Teilweiser oder vollstÑndiger Namespace>.]<Name der Protokollierungsklasse>
                     Die Syntax fÅr die <Protokollierungsassembly> lautet:
                       {<assembly name>[,<strong name>] | <assembly file>}
                     Die Protokollierungsoptionen geben an, wie MSBuild die Protokollierung erstellt.
                     Die <Protokollierungsparameter> sind optional und werden genau 
                     so an die Protokollierung Åbergeben, wie sie eingegeben wurden. (Kurzform: -l)
                     Beispiele:
                       -dl:XMLLogger,MyLogger,Version=1.0.2,Culture=neutral
                       -dl:MyLogger,C:\My.dll*ForwardingLogger,C:\Logger.dll

  -distributedFileLogger
                     Protokolliert die Erstellungsausgabe in mehrere Dateien, eine Protokolldatei
                     pro MSBuild-Knoten. Der anfÑngliche Speicherort fÅr diese Dateien ist
                     das aktuelle Verzeichnis. StandardmÑ·ig werden die Dateien 
                     "MSBuild<Knoten-ID>.log" benannt. Der Speicherort der Datei und
                     andere Parameter fÅr fileLogger kînnen durch das HinzufÅgen 
                     des Schalters "-fileLoggerParameters" angegeben werden.

                     Wenn mithilfe des fileLoggerParameters-Parameters ein Protokolldateiname festgelegt wurde,
                     verwendet die verteilte Protokollierung den Dateinamen als 
                     Vorlage und fÅgt die Knoten-ID an diesen Dateinamen an, 
                     um fÅr jeden Knoten eine Protokolldatei zu erstellen.
    
  -logger:<Protokollierung>   Mithilfe dieser Protokollierung werden Ereignisse von MSBuild protokolliert. Um mehrere Protokollierungen anzugeben, 
                     wird jede Protokollierung gesondert angegeben.
                     Die Syntax fÅr die <Protokollierung> lautet:
                       [<Klasse>,]<assembly>[,<Optionen>][;<Parameter>]
                     Die Syntax fÅr die <Protokollierungsklasse> lautet:
                        [<Teilweiser oder vollstÑndiger Namespace>.]<Name der Protokollierungsklasse>
                     Die Syntax fÅr die <Protokollierungsassembly> lautet:
                        {<assembly name>[,<strong name>] | <assembly file>}
                     Die Protokollierungsoptionen geben an, wie MSBuild die Protokollierung erstellt.
                     Die <Protokollierungsparameter> sind optional und werden genau 
                     so an die Protokollierung Åbergeben, wie sie eingegeben wurden. (Kurzform: -l)
                     Beispiele:
                       -logger:XMLLogger,MyLogger,Version=1.0.2,Culture=neutral
                       -logger:XMLLogger,C:\Loggers\MyLogger.dll;OutputAsHTML

  -binaryLogger[:[LogFile=]output.binlog[;ProjectImports={None,Embed,ZipFile}]]
                     Serialisiert alle Buildereignisse in eine komprimierte BinÑrdatei.
                     StandardmÑ·ig befindet sich die Datei im aktuellen Verzeichnis und hat den Namen
                     "msbuild.binlog". Das binÑre Protokoll ist eine detaillierte Beschreibung
                     des Buildprozesses, der spÑter zum Rekonstruieren von
                     Textprotokollen dient und der von anderen Analysetools verwendet wird. Detaillierte
                     Textprotokolle auf Diagnoseebene sind in der Regel 10-20-mal so gro· wie
                     binÑre Protokolle, letztere enthalten jedoch mehr Informationen.
                     (Kurzform: -bl)

                     Die binÑre Protokollierung erfasst standardmÑ·ig den Quelltext von
                     Projektdateien, einschlie·lich aller beim Buildvorgang aufgetretenen importierten
                     Projekte und Zieldateien. Der optionale Schalter
                     ProjectImports steuert dieses Verhalten:

                      ProjectImports=None:      - Projektimporte nicht
                                                erfassen
                      ProjectImports=Embed:     - Projektimporte in die
                                                Protokolldatei einbetten
                      ProjectImports=ZipFile:   - Projektdateien in
                                                output.projectimports.zip
                                                speichern, wobei "output" dem Namen
                                                der binÑren Protokolldatei entspricht.

                     Die Standardeinstellung fÅr "ProjectImports" ist "Embed".
                     Hinweis: Die Protokollierung erfasst nur MSBuild-Quelldateien.
                     Andere Dateien wie etwa CS, CPP usw. werden nicht erfasst.

                     Eine BINLOG-Datei kann "wiedergegeben" werden, indem sie an
                     "msbuild.exe" als Argument und nicht als Projekt/Lîsung Åbergeben wird.
                     Andere Protokollierungen erhalten die Informationen, die
                     wie beim ursprÅnglichen Buildvorgang in der Protokolldatei enthalten sind.
                     Weitere Informationen zu binÑren Protokollen und ihrer Verwendung erhalten Sie unter:
                     https://aka.ms/msbuild/binlog

                     Beispiele:
                       -bl
                       -bl:output.binlog
                       -bl:output.binlog;ProjectImports=None
                       -bl:output.binlog;ProjectImports=ZipFile
                       -bl:..\..\custom.binlog
                       -binaryLogger
    
  -warnAsError[:code[;code2]]
                     Liste mit als Fehler zu behandelnden Warncodes. Trennen Sie
                     mehrere Warncodes durch Kommas oder Semikolons. Verwenden Sie den Switch
                     ohne Daten, damit alle Warnungen als Fehler behandelt werden.
                     (Kurzform: -err[:c;[c2]])

                     Beispiel:
                       -warnAsError:MSB4130

                     Wenn eine Warnung als Fehler behandelt wird, wird das Ziel
                     wie bei einer Warnung weiter ausgefÅhrt, fÅr die
                     gesamte Erstellung kommt es jedoch zu einem Fehler.
    
  -warnNotAsError[:code[;code2]]
                     Liste der Warnungscodes, die nicht als Fehler behandelt werden.
                     Semikolon oder Komma zum Trennen 
                     mehrerer Warnungscodes verwenden. Hat keine Auswirkungen, wenn der Switch -warnaserror
                     nicht festgelegt ist.

                     Beispiel:
                       -warnNotAsError:MSB3026
    
  -warnAsMessage[:code[;code2]]
                     Liste von Warncodes, die als Meldungen mit geringer PrioritÑt
                     zu behandeln sind. Trennen Sie mehrere Warncodes
                     durch Kommas oder Semikolons.
                     (Kurzform: -noWarn[:c;[c2]])

                     Beispiel:
                       -warnAsMessage:MSB3026
    
  -validate          öberprÅft das Projekt anhand des Standardschemas. (Kurz-
                     form: -val)

  -validate:<Schema> öberprÅft das Projekt anhand des angegebenen Schemas. (Kurz-
                     form: -val)
                     Beispiel:
                       -validate:MyExtendedBuildSchema.xsd

  -ignoreprojectextensions:<Erweiterungen>
                     Liste der zu ignorierenden Erweiterungen, wenn die zu erstellende 
                     Projektdatei ermittelt wird. Verwenden Sie ein Semikolon oder ein Komma, 
                     um mehrere Erweiterungen voneinander zu trennen.
                     (Kurzform: -ignore)
                     Beispiel:
                       -ignoreprojectextensions: .sln
    
  -nodeReuse:<Parameter>
                     Aktiviert oder deaktiviert die Wiederverwendung von MSBuild-Knoten.
                     Die Parameter lauten:
                     True: Knoten bleiben nach dem Abschluss der Erstellung 
                     erhalten und werden bei folgenden Erstellungen wiederverwendet (Standardeinstellung).
                     False: Knoten bleiben nach dem Abschluss der Erstellung nicht erhalten.
                     (Kurzform: -nr)
                     Beispiel:
                       -nr:true
    
  -preprocess[:file]
                     Erstellt eine einzelne aggregierte Projektdatei
                     durch Einbeziehen aller Dateien, die beim Erstellen
                     importiert werden wÅrden, mit gekennzeichneten Grenzen. Dies kann
                     sinnvoll sein, um zu ermitteln, welche Dateien
                     importiert werden und woher sowie worin
                     ihr Beitrag zum Erstellen besteht. Die Ausgabe wird standardmÑ·ig
                     im Konsolenfenster angezeigt. Wenn der Pfad zu einer Ausgabedatei
                     bereitgestellt wird, wird dieser verwendet.
                     (Kurzform: -pp)
                     Beispiel:
                       -pp:out.txt
    
  -targets[:file]
                     Gibt eine Liste der verfÅgbaren Ziele aus, ohne den
                     eigentlichen Buildprozess auszufÅhren. StandardmÑ·ig erfolgt die Ausgabelt im
                     Konsolenfenster. Bei Angabe eines Pfads zu einer Ausgabedatei
                     erfolgt die Ausgabe stattdessen in die Ausgabedatei.
                     (Kurzform: -ts)
                     Beispiel:
                       -ts:out.txt
    
  -detailedSummary[:True|False]
                     Zeigt am Ende der Erstellung detaillierte Informationen
                     zu den erstellten Konfigurationen an und enthÑlt eine ErlÑuterung, wie sie
                     in Knoten geplant wurden.
                     (Kurzform: -ds)
    
  -restore[:True|False]
                     FÅhrt vor der Erstellung anderer Ziele ein Ziel namens
                     "Restore" aus. Dies ist hilfreich, wenn Pakete in Ihrer
                     Projektstruktur wiederhergestellt
                     werden mÅssen, bevor sie
                     erstellt werden kînnen. Die Angabe von "-restore" ist identisch mit
                     der Angabe von "-restore:True". Verwenden Sie den Parameter, um
                     einen Wert au·er Kraft zu setzen,override
                     der aus einer Antwortdatei stammt.
                     (Kurzform: -r)
    
  -restoreProperty:<n>=<v>
                     Hiermit werden diese Eigenschaften auf Projektebene nur wÑhrend der
                     Wiederherstellung festgelegt oder au·er Kraft gesetzt. Die Åber das -property-Argument
                     angegebenen Eigenschaften werden nicht verwendet. <n> ist der Eigenschaftenname,
                     und <v> ist der Eigenschaftswert. Verwenden Sie ein
                     Semikolon oder ein Komma zum Trennen mehrerer Eigenschaften,
                     oder geben Sie die einzelnen Eigenschaften gesondert an.
                     (Kurzform: -rp)
                     Beispiel:
                       -restoreProperty:IsRestore=true;MyProperty=value
    
  -profileEvaluation:<Datei>
                     Erstellt ein Profil fÅr die MSBuild-Bewertung und schreibt das Ergebnis
                     in die angegebene Datei. Wenn die Erweiterung der angegebenen
                     Datei ".md" lautet, wird das Ergebnis in Markdownformat
                     generiert. Andernfalls wird eine durch Tabulatoren getrennte Datei erstellt.
    
  -interactive[:True|False]
                     Weist darauf hin, dass fÅr Aktionen im Build eine 
                     Interaktion mit dem Benutzer zugelassen ist. Verwenden Sie dieses Argument
                     in einem automatisierten Szenario, in dem keine InteraktivitÑt
                     erwartet wird.
                     Das Angeben von "-interactive" entspricht der Angabe von
                     "-interactive:true".  Verwenden Sie den Parameter, um einen Wert zu Åberschreiben,
                     der aus einer Antwortdatei stammt.
    
  -isolateProjects[:True| MessageUponIsolationViolation| False]
                     FÅhrt dazu, dass MSBuild jedes Projekt isoliert erstellt.

Bei Festlegung auf "MessageUponIsolationViolation" (oder die zugehîrige Kurzform
                      "Message"), werden die Resultate von Top Level-Zielen
                     nur serialisiert, wenn der Parameter "-outputResultsCache"
                     angegeben wurde. Dies dient dazu, die Wahrscheinlichkeit eines
                     gegen die Isolation versto·enden Ziels fÅr ein AbhÑngigkeitsprojekt mithilfe von
                     Falscher Status aufgrund seiner AbhÑngigkeit von einem zwischengespeicherten Ziel,
                     dessen Nebenwirkungen nicht berÅcksichtigt wÅrden, abzuschwÑchen.
                     (Beispiel: Die Definition einer Eigenschaft.)

Dies ist ein restriktiverer Modus von MSBuild, da er erfordert,
                     dass das Projektdiagramm zum Zeitpunkt der Auswertung statisch auffindbar ist,
                     jedoch kann die Planung kann verbessert und
                     der Arbeitsspeicheraufwand reduziert werden, wenn gro·e Gruppen von Projekten erstellt werden.
                     (Kurzform: -isolate)

                     Dieses Kennzeichen ist experimentell und funktioniert mîglicherweise nicht wie vorgesehen.
    
  -inputResultsCaches:<cacheFile>...
                     Durch Semikolon getrennte Liste der Eingabecachedateien, aus denen MSBuild
                     Buildergebnisse liest. Wenn "-isolateProjects"
                     auf "False" festgelegt ist, wird dieser Wert auf "True" festgelegt. (Kurzform: -irc)
   
  -outputResultsCache:[cacheFile]
                     Ausgabecachedatei, in die MSBuild den Inhalt
                     des Buildergebniscaches am Ende des Builds schreibt.
                     Wenn "-isolateProjects" auf "False" festgelegt ist, wird diese Einstellung auf "True" festgelegt.
                     (Kurzform: -orc)
   
  -graphBuild[:True|False]
                     FÅhrt dazu, dass MSBuild einen Projektgraphen konstruiert und erstellt.

                     Das Konstruieren eines Graphen beinhaltet das Identifizieren von
                     Projektverweisen, um AbhÑngigkeiten zu erstellen. Bei der Grapherstellung
                     wird versucht, Projektverweise vor den Projekten zu erstellen,
                     die sie referenzieren. Dies ist eine Unterscheidung zur
                     traditionellen MSBuild-Planung.
                     (Kurzform: -graph)

                     Dieses Flag ist experimentell und funktioniert mîglicherweise nicht wie vorgesehen.
    
  -reportFileAccesses[:True|False]
                     FÅhrt dazu, dass MSBuild Dateizugriffe auf ein beliebiges konfiguriertes
                     Projektcache-Plug-In meldet.

                     Dieses Flag ist experimentell und funktioniert mîglicherweise nicht wie vorgesehen.
    
  -lowPriority[:True|False]
                     FÅhrt dazu, dass MSBuild mit niedriger ProzessprioritÑt ausgefÅhrt wird.

                     Die Angabe von -lowPriority entspricht der Angabe von
                     -lowPriority:True.
                     (Kurzform: -low)
    
  -question
                     (Experimentell) Fragen Sie, ob Buildarbeiten vorhanden sind.
                     MSBuild fÅhrt einen Fehler aus, wenn ein Ziel oder eine Aufgabe erkannt wird,
                     das/die inkrementell sein kann (mit Eingaben und Ausgaben),
                     aber nicht auf dem neuesten Stand ist.
                     (Kurzform: -q)
    
  @<Datei>            FÅgt Befehlszeileneinstellungen aus einer Textdatei ein. Um mehrere
                     Antwortdateien anzugeben, geben Sie jede Antwortdatei
                     gesondert an.

                     Alle Antwortdateien mit dem Name "msbuild.rsp" werden automatisch 
                     in den folgenden Speicherorten verwendet: 
                     (1) Verzeichnis von "msbuild.exe"
                     (2) Verzeichnis des ersten erstellten Projekts oder Projektmappe

  -noAutoResponse    Schlie·t MSBuild.rsp-Dateien nicht automatisch ein. (Kurzform:
                     -noAutoRsp)

  -noLogo            Zeigt kein Startbanner und keine Copyrightmeldung an.

  -version           Zeigt nur Versionsinformationen an. (Kurzform: -ver)

  -help              Zeigt diese Syntaxmeldung an. (Kurzform: -? oder -h)

Beispiele:

        MSBuild MyApp.sln -t:Rebuild -p:Configuration=Release
        MSBuild MyApp.csproj -t:Clean
                             -p:Configuration=Debug;TargetFrameworkVersion=v3.5
    
AusfÅhrlichere Informationen finden Sie unter https://aka.ms/msbuild/docs.
